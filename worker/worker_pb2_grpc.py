# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import worker_pb2 as worker__pb2


class WorkerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Scan = channel.unary_unary(
                '/worker.Worker/Scan',
                request_serializer=worker__pb2.DeviceScan.SerializeToString,
                response_deserializer=worker__pb2.ScanResults.FromString,
                )
        self.Connect = channel.unary_unary(
                '/worker.Worker/Connect',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.StatusMessage.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/worker.Worker/Disconnect',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.StatusMessage.FromString,
                )
        self.ListBLEServices = channel.unary_unary(
                '/worker.Worker/ListBLEServices',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.ListBLEServicesResult.FromString,
                )
        self.ListBLECharactersistic = channel.unary_unary(
                '/worker.Worker/ListBLECharactersistic',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.ListBLECharactersisticsResult.FromString,
                )
        self.ListBLEDescriptors = channel.unary_unary(
                '/worker.Worker/ListBLEDescriptors',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.ListBLEDescriptorsResult.FromString,
                )
        self.ReadBLEDescriptor = channel.unary_unary(
                '/worker.Worker/ReadBLEDescriptor',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.ReadDevice.FromString,
                )
        self.WriteBLEDescriptor = channel.unary_unary(
                '/worker.Worker/WriteBLEDescriptor',
                request_serializer=worker__pb2.WriteDevice.SerializeToString,
                response_deserializer=worker__pb2.StatusMessage.FromString,
                )
        self.Subscribe = channel.unary_unary(
                '/worker.Worker/Subscribe',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.StatusMessage.FromString,
                )
        self.Unsubscribe = channel.unary_unary(
                '/worker.Worker/Unsubscribe',
                request_serializer=worker__pb2.Device.SerializeToString,
                response_deserializer=worker__pb2.StatusMessage.FromString,
                )
        self.ReceiveNotifications = channel.unary_stream(
                '/worker.Worker/ReceiveNotifications',
                request_serializer=worker__pb2.None.SerializeToString,
                response_deserializer=worker__pb2.ReadDevice.FromString,
                )
        self.ReceiveBroadcasted = channel.unary_stream(
                '/worker.Worker/ReceiveBroadcasted',
                request_serializer=worker__pb2.None.SerializeToString,
                response_deserializer=worker__pb2.ReadDevice.FromString,
                )


class WorkerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Scan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBLEServices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBLECharactersistic(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBLEDescriptors(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadBLEDescriptor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteBLEDescriptor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unsubscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveNotifications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveBroadcasted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Scan': grpc.unary_unary_rpc_method_handler(
                    servicer.Scan,
                    request_deserializer=worker__pb2.DeviceScan.FromString,
                    response_serializer=worker__pb2.ScanResults.SerializeToString,
            ),
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.StatusMessage.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.StatusMessage.SerializeToString,
            ),
            'ListBLEServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBLEServices,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.ListBLEServicesResult.SerializeToString,
            ),
            'ListBLECharactersistic': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBLECharactersistic,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.ListBLECharactersisticsResult.SerializeToString,
            ),
            'ListBLEDescriptors': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBLEDescriptors,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.ListBLEDescriptorsResult.SerializeToString,
            ),
            'ReadBLEDescriptor': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadBLEDescriptor,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.ReadDevice.SerializeToString,
            ),
            'WriteBLEDescriptor': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteBLEDescriptor,
                    request_deserializer=worker__pb2.WriteDevice.FromString,
                    response_serializer=worker__pb2.StatusMessage.SerializeToString,
            ),
            'Subscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.StatusMessage.SerializeToString,
            ),
            'Unsubscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Unsubscribe,
                    request_deserializer=worker__pb2.Device.FromString,
                    response_serializer=worker__pb2.StatusMessage.SerializeToString,
            ),
            'ReceiveNotifications': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveNotifications,
                    request_deserializer=worker__pb2.None.FromString,
                    response_serializer=worker__pb2.ReadDevice.SerializeToString,
            ),
            'ReceiveBroadcasted': grpc.unary_stream_rpc_method_handler(
                    servicer.ReceiveBroadcasted,
                    request_deserializer=worker__pb2.None.FromString,
                    response_serializer=worker__pb2.ReadDevice.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker.Worker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Scan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Scan',
            worker__pb2.DeviceScan.SerializeToString,
            worker__pb2.ScanResults.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Connect',
            worker__pb2.Device.SerializeToString,
            worker__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Disconnect',
            worker__pb2.Device.SerializeToString,
            worker__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBLEServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/ListBLEServices',
            worker__pb2.Device.SerializeToString,
            worker__pb2.ListBLEServicesResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBLECharactersistic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/ListBLECharactersistic',
            worker__pb2.Device.SerializeToString,
            worker__pb2.ListBLECharactersisticsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBLEDescriptors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/ListBLEDescriptors',
            worker__pb2.Device.SerializeToString,
            worker__pb2.ListBLEDescriptorsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadBLEDescriptor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/ReadBLEDescriptor',
            worker__pb2.Device.SerializeToString,
            worker__pb2.ReadDevice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteBLEDescriptor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/WriteBLEDescriptor',
            worker__pb2.WriteDevice.SerializeToString,
            worker__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Subscribe',
            worker__pb2.Device.SerializeToString,
            worker__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unsubscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker/Unsubscribe',
            worker__pb2.Device.SerializeToString,
            worker__pb2.StatusMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/worker.Worker/ReceiveNotifications',
            worker__pb2.None.SerializeToString,
            worker__pb2.ReadDevice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveBroadcasted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/worker.Worker/ReceiveBroadcasted',
            worker__pb2.None.SerializeToString,
            worker__pb2.ReadDevice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
